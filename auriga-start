#!/bin/sh
# athena starting script by rowla
# and modified for Auriga

# chkconfig: 345 99 01
# description: start and stop auriga service

PATH=./:$PATH

L_SRV=./login-server
C_SRV=./char-server
M_SRV=./map-server
L_SRV_C=./conf/login_auriga.conf
C_SRV_C=./conf/char_auriga.conf
C_SRV_C2=./conf/inter_auriga.conf
M_SRV_C=./conf/map_auriga.conf
M_SRV_C2=./conf/battle_auriga.conf
M_SRV_C3=./conf/atcommand_auriga.conf
M_SRV_C4=./conf/script_auriga.conf
M_SRV_C5=./conf/msg_auriga.conf

print_start() {
#	more << EOF
echo "Auriga Starting..."
echo "			(c) 2003 Athena Project."
echo ""
echo "Debug informations will appear,"
echo "since this is a test release."
echo ""
echo "checking..."
#EOF
}

check_account() {
	if [ ! -d ./save ]; then
		mkdir ./save
	fi

	if [ ! -d ./log ]; then
		mkdir ./log
	fi

	if [ ! -d ./conf/import ]; then
		mkdir ./conf/import
	fi

	if [ ! -d ./save/mail_data ]; then
		mkdir ./save/mail_data
	fi

	if [ ! -f ./save/account.txt ]; then
		echo "0\ts1\tp1\t-\tS\t0\t0\t0\t@\t000000" >> save/account.txt
		echo "1\ts2\tp2\t-\tS\t0\t0\t0\t@\t000000" >> save/account.txt
		echo "2\ts3\tp3\t-\tS\t0\t0\t0\t@\t000000" >> save/account.txt
		echo "3\ts4\tp4\t-\tS\t0\t0\t0\t@\t000000" >> save/account.txt
		echo "4\ts5\tp5\t-\tS\t0\t0\t0\t@\t000000" >> save/account.txt
	fi

	if [ ! -f ./save/accreg.txt ]; then
		echo -n > save/accreg.txt
	fi

	if [ ! -f ./save/auriga.txt ]; then
		echo -n > save/auriga.txt
	fi

	if [ ! -f ./save/castle.txt ]; then
		echo -n > save/castle.txt
	fi

	if [ ! -f ./save/g_storage.txt ]; then
		echo -n > save/g_storage.txt
	fi

	if [ ! -f ./save/guild.txt ]; then
		echo -n > save/guild.txt
	fi

	if [ ! -f ./save/homun.txt ]; then
		echo -n > save/homun.txt
	fi

	if [ ! -f ./save/mail.txt ]; then
		echo -n > save/mail.txt
	fi

	if [ ! -f ./save/party.txt ]; then
		echo -n > save/party.txt
	fi

	if [ ! -f ./save/pet.txt ]; then
		echo -n > save/pet.txt
	fi

	if [ ! -f ./save/scdata.txt ]; then
		echo -n > save/scdata.txt
	fi

	if [ ! -f ./save/storage.txt ]; then
		echo -n > save/storage.txt
	fi

	if [ ! -f ./conf/import/atcommand_conf.txt ]; then
		echo -n > conf/import/atcommand_conf.txt
	fi

	if [ ! -f ./conf/import/battle_conf.txt ]; then
		echo -n > conf/import/battle_conf.txt
	fi

	if [ ! -f ./conf/import/char_conf.txt ]; then
		echo -n > conf/import/char_conf.txt
	fi

	if [ ! -f ./conf/import/inter_conf.txt ]; then
		echo -n > conf/import/inter_conf.txt
	fi

	if [ ! -f ./conf/import/login_conf.txt ]; then
		echo -n > conf/import/login_conf.txt
	fi

	if [ ! -f ./conf/import/map_conf.txt ]; then
		echo -n > conf/import/map_conf.txt
	fi
}

check_files() {

	for i in ${L_SRV} ${C_SRV} ${M_SRV} ${L_SRV_C} ${C_SRV_C} ${C_SRV_C2} ${M_SRV_C} ${M_SRV_C2} ${M_SRV_C3} ${M_SRV_C4} ${M_SRV_C5}
	do
		if [ ! -f ./$i ]; then
		echo "$i does not exist, or can't run."
		echo "Stoped, Check your compile or configuration file."
		exit 1;
		fi
	done

#	more << EOF
echo "Check done."
echo "Looks good, have a nice auriga!"
#EOF
}

process_check() {
	# check login server
	if [ ! -f ${L_SRV}.pid ]; then
		login=0
	else
		login=`cat ${L_SRV}.pid`
		login=$(ps ax | grep "${L_SRV}" | grep "${login}" | wc -l)
	fi

	# check char server
	if [ ! -f ${C_SRV}.pid ]; then
		char=0
	else
		char=`cat ${C_SRV}.pid`
		char=$(ps ax | grep "${C_SRV}" | grep "${char}" | wc -l)
	fi

	# check map server
	if [ ! -f ${M_SRV}.pid ]; then
		map=0
	else
		map=`cat ${M_SRV}.pid`
		map=$(ps ax | grep "${M_SRV}" | grep "${map}" | wc -l)
	fi

	# echo "check: ${login} ${char} ${map}"
	echo `expr ${login} + ${char} + ${map}`
}

case $1 in
	'start')
		if [ `process_check` -eq 0 ]; then
			print_start
			check_account
			check_files

			exec ${L_SRV} "--login-config" ${L_SRV_C}&
#			exec ${C_SRV} "--char-config" ${C_SRV_C} "--inter-config" ${C_SRV_C2} > /dev/null&
#			exec ${M_SRV} "--map-config" ${M_SRV_C} "--battle-config" ${M_SRV_C2} > /dev/null&
			exec ${C_SRV} "--char-config" ${C_SRV_C} "--inter-config" ${C_SRV_C2}&
#			exec nice -n -20 ${M_SRV} "--map-config" ${M_SRV_C} "--battle-config" ${M_SRV_C2} "--atcommand-config" ${M_SRV_C3} "--script-config" ${M_SRV_C4} "--msg-config" ${M_SRV_C5}&
			exec ${M_SRV} "--map-config" ${M_SRV_C} "--battle-config" ${M_SRV_C2} "--atcommand-config" ${M_SRV_C3} "--script-config" ${M_SRV_C4} "--msg-config" ${M_SRV_C5}&

			echo "Now Started Auriga."
		else
			echo "Auriga is already running..."
		fi
;;
	'stop')
		# check map server
		if [ -f ${M_SRV}.pid ]; then
			map=`cat ${M_SRV}.pid`
			map=$(ps ax | grep "${M_SRV}" | grep "${map}" | wc -l)
			if [ ${map} -ne 0 ]; then
				kill `cat ${M_SRV}.pid`
			fi
		fi

		# check char server
		if [ -f ${C_SRV}.pid ]; then
			char=`cat ${C_SRV}.pid`
			char=$(ps ax | grep "${C_SRV}" | grep "${char}" | wc -l)
			if [ ${char} -ne 0 ]; then
				kill `cat ${C_SRV}.pid`
			fi
		fi

		# check login server
		if [ -f ${L_SRV}.pid ]; then
			login=`cat ${L_SRV}.pid`
			login=$(ps ax | grep "${L_SRV}" | grep "${login}" | wc -l)
			if [ ${login} -ne 0 ]; then
				kill `cat ${L_SRV}.pid`
			fi
		fi
	;;
	'kill')
		# check map server
		if [ -f ${M_SRV}.pid ]; then
			map=`cat ${M_SRV}.pid`
			map=$(ps ax | grep "${M_SRV}" | grep "${map}" | wc -l)
			if [ ${map} -ne 0 ]; then
				kill -9 `cat ${M_SRV}.pid`
			fi
		fi

		# check char server
		if [ -f ${C_SRV}.pid ]; then
			char=`cat ${C_SRV}.pid`
			char=$(ps ax | grep "${C_SRV}" | grep "${char}" | wc -l)
			if [ ${char} -ne 0 ]; then
				kill -9 `cat ${C_SRV}.pid`
			fi
		fi

		# check login server
		if [ -f ${L_SRV}.pid ]; then
			login=`cat ${L_SRV}.pid`
			login=$(ps ax | grep "${L_SRV}" | grep "${login}" | wc -l)
			if [ ${login} -ne 0 ]; then
				kill -9 `cat ${L_SRV}.pid`
			fi
		fi
	;;
	'restart')
		if [ `process_check` -eq 0 ]; then
			$0 start
		else
			# check login server
			if [ ! -f ${L_SRV}.pid ]; then
				login=0
			else
				login=`cat ${L_SRV}.pid`
				login=$(ps ax | grep "${L_SRV}" | grep "${login}" | wc -l)
			fi
			if [ ${login} -eq 0 ]; then
				exec ${L_SRV} "--login-config" ${L_SRV_C}&
			fi

			# check char server
			if [ ! -f ${C_SRV}.pid ]; then
				char=0
			else
				char=`cat ${C_SRV}.pid`
				char=$(ps ax | grep "${C_SRV}" | grep "${char}" | wc -l)
			fi
			if [ ${char} -eq 0 ]; then
				exec ${C_SRV} "--char-config" ${C_SRV_C} "--inter-config" ${C_SRV_C2}&
			fi

			# check map server
			if [ ! -f ${M_SRV}.pid ]; then
				map=0
			else
				map=`cat ${M_SRV}.pid`
				map=$(ps ax | grep "${M_SRV}" | grep "${map}" | wc -l)
			fi
			if [ ${map} -eq 0 ]; then
				exec ${M_SRV} "--map-config" ${M_SRV_C} "--battle-config" ${M_SRV_C2} "--atcommand-config" ${M_SRV_C3} "--script-config" ${M_SRV_C4} "--msg-config" ${M_SRV_C5}&
			fi
		fi
	;;
	*)
		echo "Usage: auriga-start { start | stop | kill | restart }"
	;;
esac
